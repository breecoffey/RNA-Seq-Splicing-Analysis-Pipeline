This worked out example will take you through the basics of using the anthill pipeline
dependencies
	Python 2.7
	samtools
	R version 3.3.3
	leafcutter
	MatrixEQTL

The first step is to install leafcutter. We will install leafcutter into our home directory.

#change to home
cd ~
#install to current directory
git clone https://github.com/davidaknowles/leafcutter

#this will install leafcutter into your home directory
#(For this example '/homes/rschubert1' will be a placeholder for your home directory)
#next is to select your data. We have selected several bam files for this purpose. To that end, within the test_data directory you 
#you will find a text file called example_bams.txt. Opening it shows the following bamfiles

HG00133.2.M_111216_2.bam
HG00324.1.M_111124_2.bam
HG00326.1.M_111124_7.bam
NA07051.5.M_120131_1.bam
NA19209.6.M_120217_1.bam
NA20519.1.M_111124_5.bam

#assuming you are on our compbio server, these files are readily available within /homes/hwheeler1/Data/gEUVADIS
#They can be individually copied to /test_data
#alternatively you can copy them all in one line as follows

#move or copy example_bams.txt to /gEUVADIS directory
cp example_bams.txt /homes/hwheeler1/Data/gEUVADIS
#navigate to gEUVADIS 
cd /homes/hwheeler1/Data/gEUVADIS
#now copy these files
while read line; do cp $line /homes/rschubert1/test_data; done < example_bams.txt

#We are ready to now run our pipeline. 
#Note: For best results it is best to place all scripts within the same directory as the bam data, not in an adjacent, sub, or parent
#directory. This has been done for you.

#first to calculate intron excision ratios run the leaf-command script
#In general it looks as follows
#call the script, then as args use the location of your bamfiles and the location of your leafcutter directory
./leaf-command /path/bamfiles /path/leafcutter

#For our examples syntax it can be run as such 
./leaf-command . ../leafcutter

#Note:This step can take roughly an hour for this example, even longer with additional files. If you do not wish to wait around
#and keep your connection active it is recommended that you use the nohup command
nohup ./leaf-command /path/bamfiles /path/leafcutter

#Next we want to parse our SNP files
###########Bree comment here on how to do this
#Since parsing any SNP file for chromosomes takes some time we have provided a parsed example for you in
#SNPGenotypes_chr22 & SNPLocation_22.

#SNP genotype files need to be further processed to match the gene expression files generated by leafcutter
#The general syntax for this is as follows

python file_order.py /path/SNPGenotypeFile /path/GeneExpressionFile outputFileName

#Note we still want to keep these files in the same directory as our pipeline scripts, not any adjacent, parent, or sub directories
#So say we want to write to a file named filtered_chr22, the syntax would be as such

python file_order.py SNPGenotypes_chr22 Gene_expression_chr22 filtered_chr22

#Note: You may have some difficulty with loading the pandas module. In that case calling the anaconda distribution directly should work
#On this server that would look like this

/usr/local/bin/anaconda32/bin/python file_order.py SNPGenotypes_chr22 Gene_expression_chr22 filtered_chr22

#One last formatting step, our filtered_chr22 file has an extra column that must be removed

cut -f 2- filtered_chr22 > finSNP_chr22

#this outputs our final filtered SNP genotype file to a file marked finSNP_chr22
#now we are ready to run matrix_eQTL

Rscript matrix_eQTL.R /full/path/test_data/ /path/from/test_data/SNPGENOTYPES /path/from/test_data/SNPLOCATION
/path/from/test_data/GENEEXPRESSION /path/from/test_data/GENELOCATION

#for our example, since all four of these files should be generated within the test_data directory this looks like this

Rscript matrix_eQTL.R /homes/rschubert1/test_data/ finSNP_chr22 SNPLocation_chr22 Gene_expression_chr22 Gene_location_chr22
